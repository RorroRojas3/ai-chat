name: ai-chat-app

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2025-latest
    container_name: sqlpreview
    hostname: sqlpreview
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=DevPassword123!
      - MSSQL_PID=Evaluation
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P DevPassword123! -C -Q 'SELECT 1' || exit 1",
        ]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s

  migration:
    image: mcr.microsoft.com/dotnet/sdk:9.0
    working_dir: /src
    volumes:
      - .:/src
    environment:
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=aichat;User Id=sa;Password=DevPassword123!;TrustServerCertificate=true;
    command: |
      sh -c "
        dotnet tool install --global dotnet-ef &&
        export PATH=\"$$PATH:/root/.dotnet/tools\" &&
        dotnet ef database update --startup-project ./RR.AI-Chat.Api/RR.AI-Chat.Api.csproj --project ./RR.AI-Chat.Repository/RR.AI-Chat.Repository.csproj
      "
    depends_on:
      sqlserver:
        condition: service_healthy

  api:
    image: ${DOCKER_REGISTRY-}ai-chat-api:dev
    build:
      context: .
      dockerfile: RR.AI-Chat.Api/Dockerfile
    ports:
      - "7045:8081" # HTTPS port
    depends_on:
      sqlserver:
        condition: service_healthy
      migration:
        condition: service_completed_successfully

  ui:
    image: ${DOCKER_REGISTRY-}ai-chat-ui:dev
    build:
      context: ../ai-chat-ui
      dockerfile: Dockerfile.local
    ports:
      - "4200:4200"
    volumes:
      - ../ai-chat-ui:/app
      - /app/node_modules

volumes:
  sqlserver_data:
